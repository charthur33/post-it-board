{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\cwill\\\\OneDrive\\\\Desktop\\\\post-it-app\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\cwill\\\\OneDrive\\\\Desktop\\\\post-it-app\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\cwill\\\\OneDrive\\\\Desktop\\\\post-it-app\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useContext}from\"react\";import Note from\"./Note.jsx\";import axios from\"axios\";import InputArea from\"./InputArea.jsx\";import UserContext from'../context/userContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function NoteArea(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),allNotes=_useState2[0],setNewNote=_useState2[1];var _useContext=useContext(UserContext),userData=_useContext.userData;var userIDString=userData.user.id+\"\";var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),firstLoad=_useState4[0],setFirstLoad=_useState4[1];//initial call to render a user's notes when they log in\nif(firstLoad===false){getUserNotes();setFirstLoad(true);}function addNote(_x,_x2,_x3,_x4){return _addNote.apply(this,arguments);}//Get notes specific to current user \nfunction _addNote(){_addNote=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(newNoteTitle,newNoteContent,color,rotation){var newNote;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;newNote={noteTitle:newNoteTitle,noteContent:newNoteContent,noteColor:color,displayStyle:rotation,userID:userIDString};_context.next=4;return axios.post(\"http://localhost:5000/notes/add-note\",newNote);case 4:getUserNotes();_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return _addNote.apply(this,arguments);}function getUserNotes(){return _getUserNotes.apply(this,arguments);}function _getUserNotes(){_getUserNotes=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var userNoteID,notes,userNotes;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:userNoteID=userIDString;_context2.prev=1;_context2.next=4;return axios.get(\"http://localhost:5000/notes/get-notes?userID=\"+userNoteID);case 4:notes=_context2.sent;userNotes=notes.data;setNewNote(userNotes);_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](1);console.log(_context2.t0);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[1,9]]);}));return _getUserNotes.apply(this,arguments);}function deleteNote(_x5){return _deleteNote.apply(this,arguments);}function _deleteNote(){_deleteNote=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){var noteToDelete;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:noteToDelete=allNotes[id];_context3.prev=1;_context3.next=4;return axios.delete(\"http://localhost:5000/notes/delete-note?noteID=\"+noteToDelete._id);case 4:setNewNote(function(prevNotes){return prevNotes.filter(function(note,index){return index!==id;});});_context3.next=10;break;case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](1);console.log(_context3.t0);case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[1,7]]);}));return _deleteNote.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(InputArea,{onAdd:addNote}),allNotes.map(function(note,index){return/*#__PURE__*/_jsx(Note,{id:index,onDelete:deleteNote,title:note.noteTitle,content:note.noteContent,customColor:note.noteColor,customRotation:note.displayStyle},index);})]});}export default NoteArea;","map":{"version":3,"sources":["C:/Users/cwill/OneDrive/Desktop/post-it-app/client/src/components/NoteArea.jsx"],"names":["React","useState","useContext","Note","axios","InputArea","UserContext","NoteArea","props","allNotes","setNewNote","userData","userIDString","user","id","firstLoad","setFirstLoad","getUserNotes","addNote","newNoteTitle","newNoteContent","color","rotation","newNote","noteTitle","noteContent","noteColor","displayStyle","userID","post","console","log","userNoteID","get","notes","userNotes","data","deleteNote","noteToDelete","delete","_id","prevNotes","filter","note","index","map"],"mappings":"8bAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,C,wFAEA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACrB,cAA+BP,QAAQ,CAAC,EAAD,CAAvC,wCAAOQ,QAAP,eAAiBC,UAAjB,eACA,gBAAqBR,UAAU,CAACI,WAAD,CAA/B,CAAQK,QAAR,aAAQA,QAAR,CACA,GAAMC,CAAAA,YAAY,CAAGD,QAAQ,CAACE,IAAT,CAAcC,EAAd,CAAmB,EAAxC,CACA,eAAkCb,QAAQ,CAAC,KAAD,CAA1C,yCAAOc,SAAP,eAAkBC,YAAlB,eAEA;AACA,GAAID,SAAS,GAAK,KAAlB,CAAyB,CACrBE,YAAY,GACZD,YAAY,CAAC,IAAD,CAAZ,CACH,CAVoB,QAYNE,CAAAA,OAZM,wDA4BrB;AA5BqB,qFAYrB,iBAAuBC,YAAvB,CAAqCC,cAArC,CAAqDC,KAArD,CAA4DC,QAA5D,8IAEcC,OAFd,CAEwB,CACZC,SAAS,CAAEL,YADC,CAEZM,WAAW,CAAEL,cAFD,CAGZM,SAAS,CAAEL,KAHC,CAIZM,YAAY,CAAEL,QAJF,CAKZM,MAAM,CAAEhB,YALI,CAFxB,uBAScR,CAAAA,KAAK,CAACyB,IAAN,CAAW,sCAAX,CAAmDN,OAAnD,CATd,QAUQN,YAAY,GAVpB,+EAYQa,OAAO,CAACC,GAAR,cAZR,oEAZqB,kDA6BNd,CAAAA,YA7BM,8IA6BrB,uKACQe,UADR,CACqBpB,YADrB,yCAG4BR,CAAAA,KAAK,CAAC6B,GAAN,CAAU,gDAAkDD,UAA5D,CAH5B,QAGcE,KAHd,gBAIYC,SAJZ,CAIwBD,KAAK,CAACE,IAJ9B,CAKQ1B,UAAU,CAACyB,SAAD,CAAV,CALR,mFAOQL,OAAO,CAACC,GAAR,eAPR,sEA7BqB,uDAwCNM,CAAAA,UAxCM,2IAwCrB,kBAA0BvB,EAA1B,uIACQwB,YADR,CACuB7B,QAAQ,CAACK,EAAD,CAD/B,yCAGcV,CAAAA,KAAK,CAACmC,MAAN,CAAa,kDAAoDD,YAAY,CAACE,GAA9E,CAHd,QAIQ9B,UAAU,CAAC,SAAC+B,SAAD,CAAe,CACtB,MAAOA,CAAAA,SAAS,CAACC,MAAV,CAAiB,SAACC,IAAD,CAAOC,KAAP,CAAiB,CACrC,MAAOA,CAAAA,KAAK,GAAK9B,EAAjB,CACH,CAFM,CAAP,CAGH,CAJS,CAAV,CAJR,mFAUQgB,OAAO,CAACC,GAAR,eAVR,sEAxCqB,6CAuDrB,mBACI,aAAK,SAAS,CAAC,WAAf,wBACI,KAAC,SAAD,EAAW,KAAK,CAAEb,OAAlB,EADJ,CAEKT,QAAQ,CAACoC,GAAT,CAAa,SAACF,IAAD,CAAOC,KAAP,qBACV,KAAC,IAAD,EAEI,EAAE,CAAEA,KAFR,CAGI,QAAQ,CAAEP,UAHd,CAII,KAAK,CAAEM,IAAI,CAACnB,SAJhB,CAKI,OAAO,CAAEmB,IAAI,CAAClB,WALlB,CAMI,WAAW,CAAEkB,IAAI,CAACjB,SANtB,CAOI,cAAc,CAAEiB,IAAI,CAAChB,YAPzB,EACSiB,KADT,CADU,EAAb,CAFL,GADJ,CAiBH,CAED,cAAerC,CAAAA,QAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport Note from \"./Note.jsx\";\r\nimport axios from \"axios\";\r\nimport InputArea from \"./InputArea.jsx\";\r\nimport UserContext from '../context/userContext';\r\n\r\nfunction NoteArea(props) {\r\n    const [allNotes, setNewNote] = useState([]);\r\n    const { userData } = useContext(UserContext);\r\n    const userIDString = userData.user.id + \"\";\r\n    const [firstLoad, setFirstLoad] = useState(false);\r\n\r\n    //initial call to render a user's notes when they log in\r\n    if (firstLoad === false) {\r\n        getUserNotes();\r\n        setFirstLoad(true);\r\n    }\r\n\r\n    async function addNote(newNoteTitle, newNoteContent, color, rotation) {\r\n        try {\r\n            const newNote = {\r\n                noteTitle: newNoteTitle,\r\n                noteContent: newNoteContent,\r\n                noteColor: color,\r\n                displayStyle: rotation,\r\n                userID: userIDString\r\n            };\r\n            await axios.post(\"http://localhost:5000/notes/add-note\", newNote);\r\n            getUserNotes();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    //Get notes specific to current user \r\n    async function getUserNotes() {\r\n        let userNoteID = userIDString;\r\n        try {\r\n            const notes = await axios.get(\"http://localhost:5000/notes/get-notes?userID=\" + userNoteID);\r\n            var userNotes = notes.data;\r\n            setNewNote(userNotes);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    async function deleteNote(id) {\r\n        let noteToDelete = allNotes[id];\r\n        try {\r\n            await axios.delete(\"http://localhost:5000/notes/delete-note?noteID=\" + noteToDelete._id);\r\n            setNewNote((prevNotes) => {\r\n                return prevNotes.filter((note, index) => {\r\n                    return index !== id;\r\n                });\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <InputArea onAdd={addNote} />\r\n            {allNotes.map((note, index) => (\r\n                <Note\r\n                    key={index}\r\n                    id={index}\r\n                    onDelete={deleteNote}\r\n                    title={note.noteTitle}\r\n                    content={note.noteContent}\r\n                    customColor={note.noteColor}\r\n                    customRotation={note.displayStyle}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default NoteArea;\r\n"]},"metadata":{},"sourceType":"module"}